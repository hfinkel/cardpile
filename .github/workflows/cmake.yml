name: CMake

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: ["g", "clang"]
        gversion: [13]
        libcxx: ["OFF", "ON"]
        exclude:
          - compiler: "g"
            libcxx: "ON"
        include:
          - compiler: "clang"
            cversion: 15
          - compiler: "clang"
            cversion: 16

    steps:
    - uses: actions/checkout@v3

    - name: Install Packages
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get -q update
        sudo apt-get install cmake gcc-${{ matrix.gversion }} g++-${{ matrix.gversion }}
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.gversion }} ${{ matrix.gversion }}0 --slave /usr/bin/g++ g++ /usr/bin/g++-${{ matrix.gversion }} --slave /usr/bin/gcov gcov /usr/bin/gcov-${{ matrix.gversion }}
        g++ --version

    - name: Install Clang Packages
      if: ${{ matrix.compiler == 'clang' }}
      run: |
        sudo add-apt-repository -y "deb http://apt.llvm.org/$(lsb_release -s -c)/ llvm-toolchain-$(lsb_release -s -c) main"
        sudo apt-get -q update
        sudo apt-get install clang-${{ matrix.cversion }} libc++-${{ matrix.cversion }}-dev libc++abi-${{ matrix.cversion }}-dev
        clang++ --version

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}++ -DCARDPILE_USE_LIBCXX=${{ matrix.libcxx }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

